apiVersion: v1
kind: Service
metadata:
  name: connect-service
spec:
  selector:
    app: connect
  ports:
    - protocol: "TCP"
      port: 8083
      targetPort: 8083
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connect
spec:
  selector:
    matchLabels:
      app: connect
  replicas: 1
  template:
    metadata:
      labels:
        app: connect
    spec:
      containers:
        - name: connect
          image: leonardobonacci/example-connect:1.9
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
          env:
          - name: BOOTSTRAP_SERVERS
            value: "my-cluster-kafka-bootstrap:9092"
          - name: GROUP_ID
            value: "1"
          - name: CONFIG_STORAGE_TOPIC
            value: "my_connect_configs"
          - name: OFFSET_STORAGE_TOPIC
            value: "my_connect_offsets"
          - name: STATUS_STORAGE_TOPIC
            value: "my_connect_statuses"
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials2
                key: username
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials2
                key: password
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials2
                key: dbname
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.16
          command: ["/cloud_sql_proxy",
                    "-instances=concrete-rig-350503:us-central1:mysql-heroes=tcp:3306",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: my-secrets-volume
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: my-secrets-volume
          secret:
            secretName: cloudsql-instance-credentials
